{"version":3,"sources":["redux/dogSlice.js","redux/store.js","DogItem/index.js","ListDogs/index.js","SkeletonLoader/index.js","DogInfo/index.js","App.js","index.js"],"names":["dogSlice","createSlice","name","initialState","activeDog","reducers","setActiveDog","state","action","payload","actions","selectActiveDog","dog","persistConfig","key","version","storage","combineReducers","dogReducer","persistedReducer","persistReducer","configureStore","reducer","middleware","thunk","DogItem","breed","location","neighborhood","dispatch","useDispatch","href","className","onClick","ListDogs","query","URLSearchParams","useLocation","search","page","get","Number","useState","dogs","setDogs","useEffect","a","start","end","filteredDogs","dogDump","filter","item","id","fetchDogs","RenderDogs","map","PaginationNav","pageNumbers","goBackNumPages","num","push","unshift","aria-hidden","SkeletonLoader","DogInfo","useSelector","dogInfo","setDogInfo","isLoading","setLoading","error","setError","fetch","q","api_key","process","infoResponse","json","infoJSON","dogID","dogBreed","console","log","size","mime_types","format","has_breeds","order","limit","breed_id","method","headers","imageResponse","imageJSON","message","fetchDogInfo","InfoCard","imageSource","url","dogName","bredFor","breeds","bred_for","lifeSpan","life_span","temperament","src","alt","ErrorCard","details","title","text","DisplayInfo","App","persistor","persistStore","store","ReactDOM","render","loading","path","component","document","getElementById"],"mappings":"055HAEaA,EAAWC,YAAY,CAChCC,KAAM,MACNC,aAAc,CACVC,UAAW,IAEfC,SAAU,CACNC,aAAc,SAACC,EAAOC,GAClBD,EAAMH,UAAYI,EAAOC,YAKtBH,EAAiBN,EAASU,QAA1BJ,aAEFK,EAAkB,SAACJ,GAAD,OAAWA,EAAMK,IAAIR,WAErCJ,IAAf,Q,uBCVMa,EAAgB,CAClBC,IAAK,OACLC,QAAS,EACTC,Q,OAAAA,GAGEX,EAAWY,YAAgB,CAC7BL,IAAKM,IAGHC,EAAmBC,YAAeP,EAAeR,GAExCgB,cAAe,CAC1BC,QAASH,EACTI,WAAY,CAACC,O,yCCGFC,EApBC,SAAC,GAA6C,IAA3CvB,EAA0C,EAA1CA,KAAMwB,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAChCC,EAAWC,cAMjB,OACI,8BACI,oBAAGC,KAAK,IAAIC,UAAU,yCAAyCC,QANlD,WAEjBJ,EAAS7B,EADS,CAAEE,OAAMwB,QAAOC,WAAUC,mBAKvC,UACI,sBAAKI,UAAU,uCAAf,UACI,oBAAIA,UAAU,OAAd,SAAsB9B,IACtB,uBAAO8B,UAAU,aAAjB,SAA+BJ,OAEnC,uBAAOI,UAAU,aAAjB,SAA+BN,U,QC8FhCQ,EAzGE,WACb,IAAML,EAAWC,cAKbK,EAFO,IAAIC,gBAAgBC,cAAcC,QAIzCC,EAAOJ,EAAMK,IAAI,QAAUC,OAAON,EAAMK,IAAI,SAAW,EARxC,EASKE,qBATL,mBASZC,EATY,KASNC,EATM,KAWnBC,qBAAU,YACS,uCAAG,gCAAAC,EAAA,sDACVC,EAAQ,EACRC,EAAM,GACNT,IAEAQ,GADAC,EAAa,GAAPT,GACQ,GAEZU,EAAeC,EAAQC,QAAO,SAACC,GAAD,OAAUA,EAAKC,IAAMN,GAASK,EAAKC,IAAML,KAC7EJ,EAAQK,GARM,2CAAH,qDAuBfK,KACD,CAACf,IAEJ,IAAMgB,EAAa,kBACf,qBAAKvB,UAAU,aAAf,SACKW,EAAKa,KAAI,SAAC5C,GAAD,OACN,cAAC,EAAD,eAA0BA,GAAZA,EAAIyC,UAKxBI,EAAgB,WAMlB,IALA,IACIC,EAAc,GAEZC,EAAiBpB,EAAO,EAAIA,EAHX,EAGmC,EAEjDqB,EAAMrB,EAAMqB,GAAOrB,EALL,GAK8BqB,GAAO,IAAKA,IAC7DF,EAAYG,KACR,oBAAI7B,UAAW4B,IAAQrB,EAAO,mBAAqB,YAAnD,SACI,mBAAGP,UAAU,YAAYD,KAAI,gBAAW6B,GAAxC,SACI,+BAAOA,OAFsDA,IAoC7E,OA5BIrB,EAAO,GACPmB,EAAYI,QACR,oBAAI9B,UAAU,YAAd,SACI,mBACIA,UAAU,YACVD,KAAI,gBAAW4B,GACf1B,QAAS,kBAAMJ,EAAS7B,EAAsB,QAHlD,SAKI,sBAAM+D,cAAY,OAAlB,qBANuB,eAYnCxB,EAAO,IACPmB,EAAYG,KACR,oBAAI7B,UAAU,YAAd,SACI,mBACIA,UAAU,YACVD,KAAI,gBAAWQ,EAlCR,GAmCPN,QAAS,kBAAMJ,EAAS7B,EAAsB,QAHlD,SAKI,sBAAM+D,cAAY,OAAlB,qBANuB,gBAanC,8BACI,oBAAI/B,UAAU,oCAAd,SAAmD0B,OAK/D,OACI,gCACKf,GAAQ,cAACY,EAAD,IACT,cAACE,EAAD,QCzFGO,G,MAhBQ,WACnB,OACI,qBAAKhC,UAAU,eAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,iCACf,qBAAKA,UAAU,iCACf,qBAAKA,UAAU,kDC8GxBiC,EAnHC,WACZ,IAAM7D,EAAY8D,YAAYlE,GADZ,EAEY0C,mBAAS,IAFrB,mBAEXyB,EAFW,KAEFC,EAFE,OAGc1B,qBAHd,gCAIcA,oBAAS,IAJvB,mBAIX2B,EAJW,KAIAC,EAJA,OAKQ5B,oBAAS,GALjB,mBAKX6B,EALW,KAKJC,EALI,KAQlB3B,qBAAU,WACNyB,GAAW,GACO,uCAAG,0CAAAxB,EAAA,+EAEc2B,MACvB,8CACI,IAAIrC,gBAAgB,CAChBsC,EAAC,OAAEtE,QAAF,IAAEA,OAAF,EAAEA,EAAWsB,MACdiD,QAASC,0CANR,cAEPC,EAFO,gBAUUA,EAAaC,OAVvB,cAUPC,EAVO,mBAYyBA,EAAS,UAZlC,QAYwC,KAAzCC,EAZC,EAYL3B,GAAiB4B,EAZZ,EAYM/E,KACnBgF,QAAQC,IAAI,WAAYH,EAAOC,GAblB,UAuBeR,MACxB,8CACI,IAAIrC,gBAAgB,CAChBgD,KAAM,QACNC,WAAY,MACZC,OAAQ,OACRC,YAAY,EACZC,MAAO,SACPC,MAAO,EACPC,SAAUV,IAElB,CACIW,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBApCtB,eAuBPC,EAvBO,iBAwCWA,EAAcf,OAxCzB,QAwCPgB,EAxCO,OA0Cb1B,EAAW0B,EAAU,IACrBxB,GAAW,GACXE,GAAS,GA5CI,kDA8CbA,GAAS,GACTU,QAAQC,IAAI,KAAMY,SA/CL,0DAAH,oDAkDlBC,KACD,CAAC5F,IAEJ,IAAM6F,EAAW,WAAO,IAAD,sBAEbC,EAAW,UAAG/B,EAAQgC,WAAX,QAAkB,sCAC7BC,EAAO,iBAAGhG,QAAH,IAAGA,OAAH,EAAGA,EAAWF,YAAd,QAAsB,UAC7BmG,EAAO,iBAAGlC,QAAH,IAAGA,GAAH,UAAGA,EAASmC,cAAZ,iBAAG,EAAkB,UAArB,aAAG,EAAsBC,gBAAzB,QAAqC,UAC5CC,EAAQ,iBAAGrC,QAAH,IAAGA,GAAH,UAAGA,EAASmC,cAAZ,iBAAG,EAAkB,UAArB,aAAG,EAAsBG,iBAAzB,QAAsC,UAC9CC,EAAW,iBAAGvC,QAAH,IAAGA,GAAH,UAAGA,EAASmC,cAAZ,iBAAG,EAAkB,UAArB,aAAG,EAAsBI,mBAAzB,QAAwC,UAEzD,GAAIvC,EACA,OACI,sBAAKnC,UAAU,OAAf,UACI,qBAAK2E,IAAKT,EAAalE,UAAU,eAAe4E,IAAI,UAEpD,sBAAK5E,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BoE,IAC5B,oBAAIpE,UAAU,gCAAd,6BAA4DqE,KAC5D,oBAAIrE,UAAU,gCAAd,8BAA6DwE,KAC7D,mBAAGxE,UAAU,YAAb,gCAA0C0E,YAOxDG,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OACI,qBAAK9E,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4B8E,EAAQC,QACpC,mBAAG/E,UAAU,YAAb,SAA0B8E,EAAQE,aAM5CC,EAAc,WAChB,OAAI9C,IAAYI,EACLF,EAAY,cAAC,EAAD,IAAqB,cAAC4B,EAAD,KAChC7F,GAAamE,EACd,cAACsC,EAAD,CAAWC,QAAS,CAAEC,MAAO,gBAAiBC,KAAM,MAEpD,cAACH,EAAD,CAAWC,QAAS,CAAEC,MAAO,sBAAuBC,KAAM,uBAIzE,OACI,8BACI,cAACC,EAAD,OC9FGC,MAjBf,WACI,OACI,sBAAKlF,UAAU,YAAf,UACI,oBAAIA,UAAU,YAAd,+BAEA,sBAAKA,UAAU,0BAAf,UACI,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,aCLhBmF,EAAYC,YAAaC,GAE7BC,IAASC,OACL,cAAC,IAAD,CAAUF,MAAOA,EAAjB,SACI,cAAC,IAAD,CAAaG,QAAS,KAAML,UAAWA,EAAvC,SACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOM,KAAK,IAAIC,UAAWR,YAK3CS,SAASC,eAAe,W","file":"static/js/main.5708c55d.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const dogSlice = createSlice({\n    name: \"dog\",\n    initialState: {\n        activeDog: {},\n    },\n    reducers: {\n        setActiveDog: (state, action) => {\n            state.activeDog = action.payload;\n        },\n    },\n});\n\nexport const { setActiveDog } = dogSlice.actions;\n\nexport const selectActiveDog = (state) => state.dog.activeDog;\n\nexport default dogSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport dogReducer from \"./dogSlice\";\n\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport { combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n    key: \"root\",\n    version: 1,\n    storage,\n};\n\nconst reducers = combineReducers({\n    dog: dogReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport default configureStore({\n    reducer: persistedReducer,\n    middleware: [thunk],\n});\n\n// export default configureStore({\n//     reducer: {\n//         dog: dogReducer,\n//     },\n// });\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport * as dogSlice from \"../redux/dogSlice\";\n\nconst DogItem = ({ name, breed, location, neighborhood }) => {\n    const dispatch = useDispatch();\n\n    const setActiveDog = () => {\n        const dogObject = { name, breed, location, neighborhood };\n        dispatch(dogSlice.setActiveDog(dogObject));\n    };\n    return (\n        <div>\n            <a href=\"#\" className=\"list-group-item list-group-item-action\" onClick={setActiveDog}>\n                <div className=\"d-flex w-100 justify-content-between\">\n                    <h5 className=\"mb-1\">{name}</h5>\n                    <small className=\"text-muted\">{neighborhood}</small>\n                </div>\n                <small className=\"text-muted\">{breed}</small>\n            </a>\n        </div>\n    );\n};\n\nexport default DogItem;\n","import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport DogItem from \"../DogItem\";\nimport { useDispatch } from \"react-redux\";\n\nimport * as dogSlice from \"../redux/dogSlice\";\nimport dogDump from \"../data/dogDump.json\";\n\nconst ListDogs = () => {\n    const dispatch = useDispatch();\n\n    const useQuery = () => {\n        return new URLSearchParams(useLocation().search);\n    };\n    let query = useQuery();\n\n    let page = query.get(\"page\") ? Number(query.get(\"page\")) : 1;\n    const [dogs, setDogs] = useState();\n\n    useEffect(() => {\n        const fetchDogs = async () => {\n            let start = 1;\n            let end = 10;\n            if (page) {\n                end = page * 10;\n                start = end - 9;\n            }\n            const filteredDogs = dogDump.filter((item) => item.id >= start && item.id <= end);\n            setDogs(filteredDogs);\n        };\n\n        // const fetchDogs = async () => {\n        //     try {\n        //         const response = await fetch(`http://localhost:5000/dogs?page=${page}`);\n\n        //         const jsonData = await response.json();\n        //         console.log(\"fetchDogs data\", jsonData);\n        //         setDogs(jsonData);\n        //     } catch (error) {\n        //         console.log(error.message);\n        //     }\n        // };\n        // fetchDogs();\n        fetchDogs();\n    }, [page]);\n\n    const RenderDogs = () => (\n        <div className=\"list-group\">\n            {dogs.map((dog) => (\n                <DogItem key={dog.id} {...dog} />\n            ))}\n        </div>\n    );\n\n    const PaginationNav = () => {\n        const pageDifference = 4;\n        let pageNumbers = [];\n\n        const goBackNumPages = page > 4 ? page - pageDifference : 1;\n\n        for (let num = page; num <= page + pageDifference && num <= 100; num++) {\n            pageNumbers.push(\n                <li className={num === page ? \"page-item active\" : \"page-item\"} key={num}>\n                    <a className=\"page-link\" href={`?page=${num}`}>\n                        <span>{num}</span>\n                    </a>\n                </li>\n            );\n        }\n        //Add left and right arrow buttons\n        if (page > 1) {\n            pageNumbers.unshift(\n                <li className=\"page-item\" key={\"left-arrow\"}>\n                    <a\n                        className=\"page-link\"\n                        href={`?page=${goBackNumPages}`}\n                        onClick={() => dispatch(dogSlice.setActiveDog(null))}\n                    >\n                        <span aria-hidden=\"true\">&laquo;</span>\n                    </a>\n                </li>\n            );\n        }\n\n        if (page < 95) {\n            pageNumbers.push(\n                <li className=\"page-item\" key={\"right-arrow\"}>\n                    <a\n                        className=\"page-link\"\n                        href={`?page=${page + pageDifference}`}\n                        onClick={() => dispatch(dogSlice.setActiveDog(null))}\n                    >\n                        <span aria-hidden=\"true\">&raquo;</span>\n                    </a>\n                </li>\n            );\n        }\n\n        return (\n            <nav>\n                <ul className=\"pagination justify-content-center\">{pageNumbers}</ul>\n            </nav>\n        );\n    };\n\n    return (\n        <div>\n            {dogs && <RenderDogs />}\n            <PaginationNav />\n        </div>\n    );\n};\n\nexport default ListDogs;\n","import React from \"react\";\nimport \"./SkeletonLoader.css\";\n\nconst SkeletonLoader = () => {\n    return (\n        <div className=\"container-sm\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"skeleton-card container-sm\">\n                        <div className=\"skeleton-card__image loading\"></div>\n                        <div className=\"skeleton-card__title loading\"></div>\n                        <div className=\"skeleton-card__description loading\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SkeletonLoader;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport * as dogSlice from \"../redux/dogSlice\";\nimport SkeletonLoader from \"../SkeletonLoader\";\n\nconst DogInfo = () => {\n    const activeDog = useSelector(dogSlice.selectActiveDog);\n    const [dogInfo, setDogInfo] = useState({});\n    const [dogImage, setDogImage] = useState();\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    // console.log(\"activeDog\", activeDog);\n    useEffect(() => {\n        setLoading(true);\n        const fetchDogInfo = async () => {\n            try {\n                const infoResponse = await fetch(\n                    \"https://api.thedogapi.com/v1/breeds/search?\" +\n                        new URLSearchParams({\n                            q: activeDog?.breed,\n                            api_key: process.env.REACT_APP_DOG_API_KEY,\n                        })\n                );\n\n                const infoJSON = await infoResponse.json();\n\n                const { id: dogID, name: dogBreed } = infoJSON[0] ?? null;\n                console.log(\"dog Info\", dogID, dogBreed);\n                //TODO add some error checking here\n\n                // const imageResponseTwo = await fetch(\n                //     `https://dog.ceo/api/breed/${dogBreed.toLowerCase()}/images/random`\n                // );\n                // const imageJSONTwo = await imageResponseTwo.json();\n                // const imageURL = await imageJSONTwo.message;\n                // console.log(\"image Response Two\", imageURL);\n\n                const imageResponse = await fetch(\n                    \"https://api.thedogapi.com/v1/images/search?\" +\n                        new URLSearchParams({\n                            size: \"small\",\n                            mime_types: \"jpg\",\n                            format: \"json\",\n                            has_breeds: true,\n                            order: \"RANDOM\",\n                            limit: 1,\n                            breed_id: dogID,\n                        }),\n                    {\n                        method: \"GET\",\n                        headers: { \"Content-type\": \"application/json\" },\n                    }\n                );\n\n                const imageJSON = await imageResponse.json();\n                // console.log(\"dog image info\", imageJSON[0]);\n                setDogInfo(imageJSON[0]);\n                setLoading(false);\n                setError(false);\n            } catch (error) {\n                setError(true);\n                console.log(error.message);\n            }\n        };\n        fetchDogInfo();\n    }, [activeDog]);\n\n    const InfoCard = () => {\n        // console.log(\"dogInfo\", dogInfo);\n        const imageSource = dogInfo.url ?? \"client/public/dogs-illustration.png\";\n        const dogName = activeDog?.name ?? \"unknown\";\n        const bredFor = dogInfo?.breeds?.[0]?.bred_for ?? \"unknown\";\n        const lifeSpan = dogInfo?.breeds?.[0]?.life_span ?? \"unknown\";\n        const temperament = dogInfo?.breeds?.[0]?.temperament ?? \"unknown\";\n\n        if (dogInfo) {\n            return (\n                <div className=\"card\">\n                    <img src={imageSource} className=\"card-img-top\" alt=\"Doggo\" />\n\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{dogName}</h5>\n                        <h6 className=\"card-subtitle mb-2 text-muted\">{`Bred For: ${bredFor}`}</h6>\n                        <h6 className=\"card-subtitle mb-2 text-muted\">{`Life Span: ${lifeSpan}`}</h6>\n                        <p className=\"card-text\">{`Temperament: ${temperament}`}</p>\n                    </div>\n                </div>\n            );\n        }\n    };\n\n    const ErrorCard = ({ details }) => {\n        return (\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{details.title}</h5>\n                    <p className=\"card-text\">{details.text}</p>\n                </div>\n            </div>\n        );\n    };\n    // console.log(\"dogInfo \", !!dogInfo, \"activeDog \", !!activeDog, \"error \", !!error);\n    const DisplayInfo = () => {\n        if (dogInfo && !error) {\n            return isLoading ? <SkeletonLoader /> : <InfoCard />;\n        } else if (!activeDog && error) {\n            return <ErrorCard details={{ title: \"Select a Dog!\", text: \"\" }} />;\n        } else {\n            return <ErrorCard details={{ title: \"Could not find info\", text: \"Try another dog!\" }} />;\n        }\n    };\n\n    return (\n        <div>\n            <DisplayInfo />\n        </div>\n    );\n};\n\nexport default DogInfo;\n\n// const DisplayInfo = () => (isLoading ? <SkeletonLoader /> : <InfoCard />);\n\n// return <div>{dogInfo && !error ? <DisplayInfo /> : <ErrorCard />}</div>;\n","import React from \"react\";\n\nimport ListDogs from \"./ListDogs\";\nimport DogInfo from \"./DogInfo\";\n\nfunction App() {\n    return (\n        <div className=\"container\">\n            <h1 className=\"display-2\">Dogs of Cambridge</h1>\n\n            <div className=\"row justify-content-end\">\n                <div className=\"col\">\n                    <ListDogs />\n                </div>\n                <div className=\"col\">\n                    <DogInfo />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Switch, Route, Link, BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistStore } from \"redux-persist\";\nimport store from \"./redux/store\";\n\nimport App from \"./App\";\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" component={App} />\n                </Switch>\n            </BrowserRouter>\n        </PersistGate>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}